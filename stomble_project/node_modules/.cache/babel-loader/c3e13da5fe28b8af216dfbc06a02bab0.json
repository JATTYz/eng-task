{"ast":null,"code":"var _jsxFileName = \"/home/jatty/stomble_project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Nav from './component/Nav';\nimport CSVReader from './CSVReader.tsx';\nimport Test from './test.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AddContact from './component/AddContact';\nimport uuid from 'react-uuid';\nimport UpdateContact from './component/UpdateContact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [rowData, setData] = useState([]);\n  const [query, setQuery] = useState(\"\"); //load data when this page is loaded\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    axios.get(`http://localhost:5000/contacts`).then(res => {\n      const allData = res.data;\n      setData(allData);\n    });\n  }; //  const getData = async () => {\n  //     const res = await api.get(\"/contacts\", {headers: {'Access-Control-Allow-Origin' : '*',}});\n  //     api.head()\n  //     return res.data;\n  //  }\n  // const addContactHandler = async (contact) => {\n  //   console.log(contact);\n  //   const req = {\n  //     id:uuid(),\n  //     ...rowData\n  //   }\n  //   const res = await api.post(\"/contacts\", req);\n  //   setData([...rowData, res.data]);\n  // }\n\n\n  const addContactHandler = async contact => {\n    //  console.log(contact);\n    const newData = {\n      id: uuid(),\n      contact\n    };\n    await axios.post(`http://localhost:5000/contacts`, newData);\n    setData([...rowData, newData]);\n  };\n\n  const removeContactHandler = async id => {\n    console.log(id);\n    await axios.delete(`http://localhost:5000/contacts/${id}`);\n    const newContacts = rowData.filter(c => {\n      return c.id !== id;\n    });\n    setData(newContacts);\n  };\n\n  const updateContactHandler = async contact => {\n    await axios.put(`http://localhost:5000/contacts/${contact.id}`, {\n      contact: contact\n    }); //** Try to implement, but got contact.contact is undefined */\n    //  setData(rowData.map((c) => {\n    //   return c.id === id ? {...res.data} : contact;\n    //  }));\n    //  console.log(res);\n  };\n\n  const search = data => {\n    return data.filter(c => c.contact.name.toLowerCase().includes(query));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search By Name\",\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Test, {\n            data: rowData,\n            remove: removeContactHandler,\n            update: updateContactHandler,\n            search: search(rowData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"** I try to implement this feature. I can only store in .json file but I can't fetch it **\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Please select a .csv file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CSVReader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UpdateContact, {\n            updateContactHandler: updateContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rCM68fiqNFERzGkUHZYyCq758mc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","Nav","CSVReader","Test","Container","Row","Col","AddContact","uuid","UpdateContact","App","rowData","setData","query","setQuery","getData","get","then","res","allData","data","addContactHandler","contact","newData","id","post","removeContactHandler","console","log","delete","newContacts","filter","c","updateContactHandler","put","search","name","toLowerCase","includes","e","target","value"],"sources":["/home/jatty/stomble_project/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport React ,{ useEffect, useState } from 'react';\nimport './App.css';\nimport Nav from './component/Nav';\nimport CSVReader from './CSVReader.tsx';\nimport Test from './test.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AddContact from './component/AddContact';\nimport uuid from 'react-uuid';\nimport UpdateContact from './component/UpdateContact';\n\nfunction App() {\n\nconst [rowData, setData] = useState([]);\nconst [query, setQuery] = useState(\"\");\n\n//load data when this page is loaded\nuseEffect(() => {getData()}, []);\n\nconst getData = async () => {\n  axios.get(`http://localhost:5000/contacts`).then((res) => {\n    const allData = res.data;\n    setData(allData);\n  })\n}\n\n//  const getData = async () => {\n//     const res = await api.get(\"/contacts\", {headers: {'Access-Control-Allow-Origin' : '*',}});\n//     api.head()\n//     return res.data;\n//  }\n\n  // const addContactHandler = async (contact) => {\n  //   console.log(contact);\n  //   const req = {\n  //     id:uuid(),\n  //     ...rowData\n  //   }\n\n  //   const res = await api.post(\"/contacts\", req);\n  //   setData([...rowData, res.data]);\n  // }\n\n  const addContactHandler = async (contact) => {\n\n    //  console.log(contact);\n    const newData = {\n      id: uuid(),\n      contact\n    }\n     await axios.post(`http://localhost:5000/contacts`, newData); \n\n     setData([...rowData, newData])\n\n     \n  }\n\n  const removeContactHandler = async (id) => {\n    console.log(id);\n    await axios.delete(`http://localhost:5000/contacts/${id}`);\n    const newContacts = rowData.filter((c) => {\n      return c.id !== id;\n    });\n\n    setData(newContacts);\n  }\n\n\n  const updateContactHandler = async (contact) => {\n    await axios.put(`http://localhost:5000/contacts/${contact.id}`, {contact: contact});\n\n  //** Try to implement, but got contact.contact is undefined */\n  //  setData(rowData.map((c) => {\n  //   return c.id === id ? {...res.data} : contact;\n  //  }));\n  //  console.log(res);\n\n  }\n\n\n\n\n  const search = (data) => {\n    return data.filter((c) => c.contact.name.toLowerCase().includes(query));\n  }\n\n\n  \n\n\n\n  return (\n    <div >\n      <Nav/>\n      <Container className=\"mt-5\">\n        <Row>\n          <Col>\n          <input\n            type=\"text\"\n            placeholder=\"Search By Name\"\n            onChange={(e) => setQuery(e.target.value)}\n          />\n          <Test data={rowData} \n                remove={removeContactHandler} \n                update={updateContactHandler}\n                search={search(rowData)}\n                />\n          </Col>\n          <Col>\n          <p>** I try to implement this feature. I can only store in .json file but I can't fetch it **</p>\n          <h1>Please select a .csv file</h1>\n          <CSVReader/>\n          <AddContact addContactHandler={addContactHandler} /> \n          <UpdateContact updateContactHandler={updateContactHandler}/>\n          </Col>\n        </Row>\n      </Container>\n      </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}