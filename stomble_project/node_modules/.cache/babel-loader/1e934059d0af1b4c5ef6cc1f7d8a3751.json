{"ast":null,"code":"var _jsxFileName = \"/home/jatty/stomble_project/src/CSVReader.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useCSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  csvReader: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  browseFile: {\n    width: '20%'\n  },\n  acceptedFile: {\n    border: '1px solid #ccc',\n    height: 45,\n    lineHeight: 2.5,\n    paddingLeft: 10,\n    width: '80%'\n  },\n  remove: {\n    borderRadius: 0,\n    padding: '0 20px'\n  },\n  progressBarBackgroundColor: {\n    backgroundColor: 'red'\n  }\n};\n\nconst CSVReader = () => {\n  _s();\n\n  const {\n    CSVReader\n  } = useCSVReader();\n  const [columnData, setColumnData] = useState([]);\n  const [test, setTest] = useState(null);\n\n  async function postData() {\n    //  await fetch('http://localhost:5000/contacts',{\n    //   method:'POST',\n    //   mode: 'cors',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //   },\n    //   body: JSON.stringify({rowData: columnData})\n    //  })\n    axios.post('http://localhost:5000/contacts', {\n      contact: columnData\n    });\n  }\n\n  async function getData() {\n    const res = await fetch('http://localhost:5000/contacts');\n    const data = await res.json(); // newTest(data)\n\n    return data;\n  }\n\n  async function printData() {\n    await getData();\n    const data = getData();\n    data.then(function (row) {\n      // setColumnData(row);\n      setTest(row);\n    });\n    console.log(test);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CSVReader, {\n    config: {\n      header: true\n    },\n    onUploadAccepted: async results => {\n      const s = await results;\n      console.log('---------------------------');\n      console.log(s.data);\n      console.log('---------------------------');\n      setColumnData(s.data);\n    },\n    children: _ref => {\n      let {\n        getRootProps,\n        acceptedFile,\n        ProgressBar,\n        getRemoveFileProps\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.csvReader,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            ...getRootProps(),\n            style: styles.browseFile,\n            children: \"Browse file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.acceptedFile,\n            children: acceptedFile && acceptedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", { ...getRemoveFileProps(),\n            style: styles.remove,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          style: styles.progressBarBackgroundColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: postData,\n          children: \" Save Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CSVReader, \"FbLC1VkKOAmV+3qkNmEBG65ow1M=\", false, function () {\n  return [useCSVReader];\n});\n\n_c = CSVReader;\nexport default CSVReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSVReader\");","map":{"version":3,"names":["axios","React","useState","useCSVReader","styles","csvReader","display","flexDirection","marginBottom","browseFile","width","acceptedFile","border","height","lineHeight","paddingLeft","remove","borderRadius","padding","progressBarBackgroundColor","backgroundColor","CSVReader","columnData","setColumnData","test","setTest","postData","post","contact","getData","res","fetch","data","json","printData","then","row","console","log","header","results","s","getRootProps","ProgressBar","getRemoveFileProps","name"],"sources":["/home/jatty/stomble_project/src/CSVReader.tsx"],"sourcesContent":["import axios from 'axios';\nimport React, { CSSProperties, useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCSVReader } from 'react-papaparse';\n\nconst styles = {\n  csvReader: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: 10,\n  } as CSSProperties,\n  browseFile: {\n    width: '20%',\n  } as CSSProperties,\n  acceptedFile: {\n    border: '1px solid #ccc',\n    height: 45,\n    lineHeight: 2.5,\n    paddingLeft: 10,\n    width: '80%',\n  } as CSSProperties,\n  remove: {\n    borderRadius: 0,\n    padding: '0 20px',\n  } as CSSProperties,\n  progressBarBackgroundColor: {\n    backgroundColor: 'red',\n  } as CSSProperties,\n};\nconst CSVReader = () => {\n\nconst { CSVReader } = useCSVReader();\n\nconst [columnData,  setColumnData] = useState([]);\nconst [test, setTest]= useState(null);\n\nasync function postData(){\n\n  //  await fetch('http://localhost:5000/contacts',{\n  //   method:'POST',\n  //   mode: 'cors',\n  //   headers: {\n  //     'Content-type': 'application/json',\n  //   },\n  //   body: JSON.stringify({rowData: columnData})\n  //  })\n  axios.post('http://localhost:5000/contacts', {contact: columnData});\n\n\n}\n\nasync function getData(){\n  const res = await fetch('http://localhost:5000/contacts');\n  const data = await res.json();\n  // newTest(data)\n  return data;\n}\n\n async function printData(){\n\n  await getData();\n  const data = getData();\n  data.then(function(row){\n    // setColumnData(row);\n    setTest(row);\n  })\n \n  console.log(test);\n  \n  \n}\n\n\n  return (\n\n  <CSVReader\n\n      config={{ header: true }}\n      onUploadAccepted={async (results: any) => {\n        \n        const s = await results;\n        console.log('---------------------------');\n        console.log(s.data);\n        console.log('---------------------------');\n\n        setColumnData(s.data)\n      }}\n    >\n      {({\n        getRootProps,\n        acceptedFile,\n        ProgressBar,\n        getRemoveFileProps,\n      }: any) => (\n        <>\n          <div style={styles.csvReader}>\n            <button type='button' {...getRootProps()} style={styles.browseFile}>\n              Browse file\n            </button>\n            <div style={styles.acceptedFile}>\n              {acceptedFile && acceptedFile.name}\n            </div>\n            <button {...getRemoveFileProps()} style={styles.remove}>\n              Remove\n            </button>\n          </div>\n          <ProgressBar style={styles.progressBarBackgroundColor} />\n\n          <button onClick={postData}> Save Data </button>\n        </>\n      )}\n    </CSVReader> \n\n  )\n}\n\nexport default CSVReader"],"mappings":"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"},"metadata":{},"sourceType":"module"}